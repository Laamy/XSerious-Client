#region Imports

using System.Diagnostics;
using System.IO;
using System.Windows.Forms;

using XSeriesAPI.InternalAPI;

#endregion

namespace XSeriesAPI
{
    public class ExploitAPI
    {
        public const string ExploitPipe = "XSeries";
        public const string RequireDllName = "XSerious Client.dll";

        public void ExecuteScript(string lua)
        {
            bool injected = NamedPipe.SendPacket(ExploitPipe, "Script", lua);

            if (!injected)
            {
                MessageBox.Show("Please attach to roblox before executing", "XSeries");
            }
        }

        public bool Attach()
        {
            bool output = true;

            if (isRobloxOpen()) // found roblox
            {
                if (File.Exists(RequireDllName)) // found Dll
                {
                    InjectionHandler.InjectDLL(RequireDllName); // inject Dll

                    output = true;
                }
            }

            return output;
        }

        public bool ExitRoblox()
        {
            bool output = false;

            if (isRobloxOpen()) // TODO: kill all launcher instances
            {
                Process[] processes = Process.GetProcessesByName("RobloxPlayerBeta");
                foreach (Process proc in processes)
                    proc.Kill();

                output = true;
            }

            return output;
        }

        public bool isRobloxOpen()
        {
            bool output = false;

            Process[] targetProcessIndex = Process.GetProcessesByName("RobloxPlayerBeta");
            if (targetProcessIndex.Length > 0)
                output = true;

            return output;
        }

        public bool isAttached()
        {
            bool output = false;

            if (NamedPipe.PipeExists(ExploitPipe))
                output = true;

            return output;
        }
    }
}
